#ifndef HI704_H
#define HI704_H
unsigned char hi704_640x480[]={
  //PAGE 0
	//Image Size/Windowing/HSYNC/VSYNC[Type1]
	0x03, 0x00,	//PAGEMODE(0x03)
	0x01, 0xc1,
	0x01, 0xc3,	//PWRCTL(0x01[P0])Bit[1]:Software Reset.
	0x01, 0xc1,

	0x11, 0x91,	//For Fixed Framerate Bit[2]//brian 20110308 94->90
	0x12, 0x05,//brian 20120308 04->05


	0x20, 0x00,
	0x21, 0x04,
	0x22, 0x00,
	0x23, 0x04,

	0x24, 0x01,
	0x25, 0xe0,
	0x26, 0x02,
	0x27, 0x80,

	0x40, 0x01,	//HBLANK: 0x70 = 112
	0x41, 0x34, 
	0x42, 0x00,	//VBLANK: 0x40 = 64
	0x43, 0x64,	//0x04 -> 0x40: For Max Framerate = 30fps
	
	//BLC
	0x80, 0x2e,
	0x81, 0x7e,
	0x82, 0x90,
	0x83, 0x30,
	0x84, 0x2c,//*** Change 100406
	0x85, 0x4b,//*** Change 100406 
	0x89, 0x48,//BLC hold
	0x90, 0x0a,//TIME_IN	11/100	_100318
	0x91, 0x0a,//TIME_OUT 11/100	_100318
	0x92, 0x48,//AG_IN
	0x93, 0x40,//AG_OUT
	0x98, 0x38,
	0x99, 0x40, //Out BLC
	0xa0, 0x00, //Dark BLC
	0xa8, 0x40, //Normal BLC

	//Page 2  Last Update 10_03_12
	0x03, 0x02,
	0x13, 0x40, //*** ADD 100402 
	0x14, 0x04, //*** ADD 100402 
	0x1a, 0x00, //*** ADD 100402 
	0x1b, 0x08, //*** ADD 100402 
	0x20, 0x33,
	0x21, 0xaa,//*** Change 100402 
	0x22, 0xa7,
	0x23, 0x32,//*** Change 100405 
	0x3b, 0x48,//*** ADD 100405 
	0x50, 0x21, //*** ADD 100406
	0x52, 0xa2,
	0x53, 0x0a,
	0x54, 0x30,//*** ADD 100405 
	0x55, 0x10,//*** Change 100402 
	0x56, 0x0c,
	0x59, 0x0F,//*** ADD 100405 
	0x60, 0xca,
	0x61, 0xdb,
	0x62, 0xca,
	0x63, 0xda,
	0x64, 0xca,
	0x65, 0xda,
	0x72, 0xcb,
	0x73, 0xd8,
	0x74, 0xcb,
	0x75, 0xd8,
	0x80, 0x02,
	0x81, 0xbd,
	0x82, 0x24,
	0x83, 0x3e,
	0x84, 0x24,
	0x85, 0x3e,
	0x92, 0x72,
	0x93, 0x8c,
	0x94, 0x72,
	0x95, 0x8c,
	0xa0, 0x03,
	0xa1, 0xbb,
	0xa4, 0xbb,
	0xa5, 0x03,
	0xa8, 0x44,
	0xa9, 0x6a,
	0xaa, 0x92,
	0xab, 0xb7,
	0xb8, 0xc9,
	0xb9, 0xd0,
	0xbc, 0x20,
	0xbd, 0x28,
	0xc0, 0xDE,
	0xc1, 0xEC,
	0xc2, 0xDE,
	0xc3, 0xEC,
	0xc4, 0xE0,
	0xc5, 0xEA,
	0xc6, 0xE0,
	0xc7, 0xEa,
	0xc8, 0xe1,
	0xc9, 0xe8,
	0xca, 0xe1,
	0xcb, 0xe8,
	0xcc, 0xe2,
	0xcd, 0xe7,
	0xce, 0xe2,
	0xcf, 0xe7,
	0xd0, 0xc8,
	0xd1, 0xef,
	//0xd7, 0x48,

	//PAGE 10
	//Image Format, Image Effect
	0x03, 0x10,
	0x10, 0x03,

	0x11, 0x43,
	0x12, 0x30, //Y offet, dy offseet enable
	//0x40, 0x80,
	0x41, 0x00, //00 DYOFS  00->10  _100318
	0x48, 0x94, //Contrast  88->84  _100318   brian 90->94
	0x50, 0x48, //AGBRT
  
	0x60, 0x7f,
	0x61, 0x00, //Use default
	0x62, 0xa8, //SATB  (1.4x)
	0x63, 0xa0, //SATR  (1.2x)
	0x64, 0x48, //AGSAT
	0x66, 0x90, //wht_th2
	0x67, 0x67, //wht_gain  Dark (0.4x), Normal (0.75x)36-67

	//LPF
	0x03, 0x11,
	0x10, 0x25,	//LPF_CTL1 //0x01
	0x11, 0x1f,	//Test Setting
	0x20, 0x00,	//LPF_AUTO_CTL
	0x21, 0x38,	//LPF_PGA_TH
	0x23, 0x0a,	//LPF_TIME_TH
	0x60, 0x0a,	//ZARA_SIGMA_TH //40->10
	0x61, 0x82,
	0x62, 0x00,	//ZARA_HLVL_CTL
	0x63, 0x83,	//ZARA_LLVL_CTL
	0x64, 0x83,	//ZARA_DY_CTL

	0x67, 0xF0,	//*** Change 100402     //Dark
	0x68, 0x30,	//*** Change 100402     //Middle
	0x69, 0x10,	//High

	0x03, 0x12,
	0x40, 0xe9,	//YC2D_LPF_CTL1
	0x41, 0x09,	//YC2D_LPF_CTL2
	0x50, 0x18,	//Test Setting
	0x51, 0x24,	//Test Setting
	0x70, 0x1f,	//GBGR_CTL1 //0x1f
	0x71, 0x00,	//Test Setting
	0x72, 0x00,	//Test Setting
	0x73, 0x00,	//Test Setting
	0x74, 0x10,	//GBGR_G_UNIT_TH
	0x75, 0x10,	//GBGR_RB_UNIT_TH
	0x76, 0x20,	//GBGR_EDGE_TH
	0x77, 0x80,	//GBGR_HLVL_TH
	0x78, 0x88,	//GBGR_HLVL_COMP
	0x79, 0x18,	//Test Setting
	0xb0, 0x7d,   //dpc

	//Edge
	0x03, 0x13,
	0x10, 0x01,	
	0x11, 0x89,	
	0x12, 0x14,	
	0x13, 0x19,	
	0x14, 0x08,	//Test Setting
	0x20, 0x07,	//SHARP_Negative
	0x21, 0x05,	//SHARP_Positive
	0x23, 0x30,	//SHARP_DY_CTL
	0x24, 0x33,	//40->33
	0x25, 0x08,	//SHARP_PGA_TH
	0x26, 0x18,	//Test Setting
	0x27, 0x00,	//Test Setting
	0x28, 0x08,	//Test Setting
	0x29, 0x50,	//AG_TH
	0x2a, 0xe0,	//region ratio
	0x2b, 0x10,	//Test Setting
	0x2c, 0x28,	//Test Setting
	0x2d, 0x40,	//Test Setting
	0x2e, 0x00,	//Test Setting
	0x2f, 0x00,	//Test Setting
	0x30, 0x11,	//Test Setting
	0x80, 0x03,	//SHARP2D_CTL
	0x81, 0x07,	//Test Setting
	0x90, 0x06,	//SHARP2D_SLOPE
	0x91, 0x04,	//SHARP2D_DIFF_CTL
	0x92, 0x00,	//SHARP2D_HI_CLIP
	0x93, 0x20,	//SHARP2D_DY_CTL
	0x94, 0x42,	//Test Setting
	0x95, 0x60,	//Test Setting
	
	0x03, 0x14, //disable for white pixel
	0x10, 0x01,
	0x20, 0x8a, //XCEN
	0x21, 0x8e, //YCEN
	0x22, 0x66, //76, 34, 2b
	0x23, 0x50, //4b, 15, 0d
	0x24, 0x44, //3b, 10, 0b

	//Page 15 CMC
	0x03, 0x15, 
	0x10, 0x03,

	0x14, 0x3c,
	0x16, 0x2c,
	0x17, 0x2f,

	0x30, 0xcb,
	0x31, 0x61,
	0x32, 0x16,
	0x33, 0x23,
	0x34, 0xce,
	0x35, 0x2b,
	0x36, 0x01,
	0x37, 0x34,
	0x38, 0x75,

	0x40, 0x87,
	0x41, 0x18,
	0x42, 0x91,
	0x43, 0x94,
	0x44, 0x9f,
	0x45, 0x33,
	0x46, 0x00,
	0x47, 0x94,
	0x48, 0x14,

	0x03, 0x16, 
	0x30, 0x00,
	0x31, 0x0b,
	0x32, 0x20,
	0x33, 0x36,
	0x34, 0x5b,
	0x35, 0x75,
	0x36, 0x8c,
	0x37, 0x9f,
	0x38, 0xaf,
	0x39, 0xbd,
	0x3a, 0xca,
	0x3b, 0xdd,
	0x3c, 0xec,
	0x3d, 0xf7,
	0x3e, 0xff,

	//Page 17 AE 
	0x03, 0x17,
	0xc4, 0x3c,
	0xc5, 0x32,

	//Page 20 AE 
	0x03, 0x20,
	0x10, 0x0c,
	0x11, 0x04,

	0x20, 0x01,
	0x28, 0x27,
	0x29, 0xa1,

	0x2a, 0xf0,
	0x2b, 0x34,
	0x2c, 0x2b, //23->2b 2010_04_06 hhzin

	0x30, 0xf8,

	0x39, 0x22,
	0x3a, 0xde,
	0x3b, 0x22, //23->22 _10_04_06 hhzin
	0x3c, 0xde,

	0x60, 0x95, //d5, 99
	0x68, 0x3c,
	0x69, 0x64,
	0x6A, 0x28,
	0x6B, 0xc8,

	0x70, 0x42,//Y Target 42

	0x76, 0x32, //Unlock bnd1
	0x77, 0xa1, //Unlock bnd2 02->a2 _10_04_06 hhzin

	0x78, 0x22, //Yth 1
	0x79, 0x30, //Yth 2 26->27 _10_04_06 hhzin
	0x7a, 0x23, //Yth 3

	0x7c, 0x1d, 
	0x7d, 0x22, 
	
	//50Hz
	0x83, 0x00,//ExpTime 30fps
	0x84, 0x62,
	0x85, 0xd9,
	
	0x86, 0x00,//ExpMin
	0x87, 0xf1, 

	0x88, 0x01,
	0x89, 0x8b,
	0x8a, 0x64,
	
	0x8b, 0x20,//Exp100
	0x8c, 0xf3,
	
	0x8d, 0x1b,//Exp120
	0x8e, 0x4d,
	
	0x91, 0x01,
	0x92, 0x6d,
	0x93, 0x3c,

	0x94, 0x01, //fix_step
	0x95, 0xb7,
	0x96, 0x74,

	0x98, 0x8C,
	0x99, 0x23,

	0x9c, 0x06, //4shared limit_10_04_06 hhzin
	0x9d, 0x97, // 0x06d3 --> 0x0b3b
	0x9e, 0x00, //4shared Unit_10_04_06 hhzin
	0x9f, 0xf1, // 0x01f4 --> 0xfa

	0xb1, 0x14,
	0xb2, 0x50,
	0xb4, 0x14,
	0xb5, 0x38,
	0xb6, 0x26,
	0xb7, 0x20,
	0xb8, 0x1d,
	0xb9, 0x1b,
	0xba, 0x1a,
	0xbb, 0x19,
	0xbc, 0x19,
	0xbd, 0x18,

	0xc0, 0x1a,
	0xc3, 0x48,
	0xc4, 0x48,

	//Page 22 AWB
	0x03, 0x22,
	0x10, 0xe2,
	0x11, 0x26,
	0x20, 0x34,
	0x21, 0x40,
	0x30, 0x80,
	0x31, 0x80,
	0x38, 0x12,
	0x39, 0x33,
	0x40, 0xf0,
	0x41, 0x32,
	0x42, 0x33,
	0x43, 0xf3,
	0x44, 0x88,
	0x45, 0x66,
	0x46, 0x02,

	0x80, 0x3a,
	0x81, 0x20,
	0x82, 0x40,
	0x83, 0x52, //RMAX Default : 50 -> 48 -> 52 
	0x84, 0x18, //RMIN Default : 20
	0x85, 0x5c, //BMAX Default : 50, 5a -> 58 -> 55
	0x86, 0x25, //BMIN Default : 20
	0x87, 0x4d, //RMAXB Default : 50, 4d
	0x88, 0x38, //RMINB Default : 3e, 45 --> 42
	0x89, 0x3e, //BMAXB Default : 2e, 2d --> 30
	0x8a, 0x29, //BMINB Default : 20, 22 --> 26 --> 29
	0x8b, 0x02, //OUT TH
	0x8d, 0x22,
	0x8e, 0x71,

	0x8f, 0x5c,
	0x90, 0x59,
	0x91, 0x55,
	0x92, 0x50,
	0x93, 0x48,
	0x94, 0x3e,
	0x95, 0x37,
	0x96, 0x30,
	0x97, 0x29,
	0x98, 0x26,
	0x99, 0x20,
	0x9a, 0x1a,
	0x9b, 0x0b,

	0x03, 0x22,
	0x10, 0xfb,

	0x03, 0x20,
	0x10, 0x9c,

	0x01, 0xc0// brian 20120308 f0                                
};

unsigned char hi704_320x240[]={
       0x03, 0x00,
  	0x01, 0xc1,
  	0x10, 0x10,
  	
   //    0x20, 0x00,
	//0x21, 0x00,
	//0x22, 0x00,
	//0x23, 0x00,

	//0x24, 0x01,
	//0x25, 0xe0,
//	0x26, 0x02,
//	0x27, 0x80,
	
       0x40, 0x01,	//HBLANK: 0x70 = 112
	0x41, 0x34, 
	0x42, 0x00,	//VBLANK: 0x40 = 64
	0x43, 0x64,
	 0x03, 0x11,
  	0x10, 0x21,
    //Page 18 
	//0x03, 0x18,
	//0x10, 0x03,
	//0x14, 0x02,
   //    0x15, 0x50,
	//0x16, 0x3c,
	//0x17, 0x0f,
	//0x18, 0x9c,
	//0x19, 0x10,
	//0x1a, 0x00,
	  //Page 20
       0x03, 0x20,
  	0x10, 0x1c,
  	0x18, 0x38,
       0x86, 0x00,//ExpMin
	0x87, 0xf1, 
	0x8b, 0x20,//Exp100
	0x8c, 0xf3,
	0x8d, 0x1b,//Exp120
	0x8e, 0x4d,
	0x9c, 0x06, //4shared limit_10_04_06 hhzin
	0x9d, 0x97, // 0x06d3 --> 0x0b3b
	0x9e, 0x00, //4shared Unit_10_04_06 hhzin
	0x9f, 0xf1, 
	0x01, 0xc0,
	
       0x03, 0x20,
  	0x10, 0x9c,
  	0x18, 0x30,
 
	  
	
};

unsigned char hi704_176x144[]={
 


	    0x03, 0x00,
  	0x01, 0xc1,
  	0x10, 0x21,
  	

       0x20, 0x00,
	0x21, 0x00,
	0x22, 0x00,
	0x23, 0x1a,

	0x24, 0x01,
	0x25, 0xe0,
	0x26, 0x02,
	0x27, 0x4c,
       0x40, 0x01,	//HBLANK: 0x70 = 112
	0x41, 0x34, 
	0x42, 0x00,	//VBLANK: 0x40 = 64
	0x43, 0x64,
	 0x03, 0x11,
  	0x10, 0x21,
  
     //Page 18
	0x03, 0x18,
	0x10, 0x03,
	0x14, 0x02,
       0x15, 0x2c,
	0x16, 0x24,
	0x17, 0x19,
	0x18, 0x90,
	0x19, 0x1a,
	0x1a, 0xaa,
	  //Page 20
       0x03, 0x20,
  	0x10, 0x1c,
  	0x18, 0x38,
       0x86, 0x00,//ExpMin
	0x87, 0xf1, 
	0x8b, 0x20,//Exp100
	0x8c, 0xf3,
	0x8d, 0x1b,//Exp120
	0x8e, 0x4d,
	0x9c, 0x06, //4shared limit_10_04_06 hhzin
	0x9d, 0x97, // 0x06d3 --> 0x0b3b
	0x9e, 0x00, //4shared Unit_10_04_06 hhzin
	0x9f, 0xf1, 
	0x01, 0xc0,
	
       0x03, 0x20,
  	0x10, 0x9c,
  	0x18, 0x30,
};


#if 0

switch (In->FeatureSetValue)
    {
    case CAM_WB_AUTO: /* enable AWB */
      /* CAM_WB_AUTO mode should not update R/G/B gains */
      {
		CamWriteCmosSensor(0x03, 0x22);			
		//CamWriteCmosSensor(0x11, 0x2e);				
		//CamWriteCmosSensor(0x80, 0x38);
		//CamWriteCmosSensor(0x82, 0x38);				
		CamWriteCmosSensor(0x83, 0x52);
		CamWriteCmosSensor(0x84, 0x1b);
		CamWriteCmosSensor(0x85, 0x50);
		CamWriteCmosSensor(0x86, 0x25);				
	  }
      break;
    case CAM_WB_CLOUD: /* disable AWB */
	  {
		CamWriteCmosSensor(0x03, 0x22);
		CamWriteCmosSensor(0x11, 0x28);
		CamWriteCmosSensor(0x80, 0x71);
		CamWriteCmosSensor(0x82, 0x2b);
		CamWriteCmosSensor(0x83, 0x72);
		CamWriteCmosSensor(0x84, 0x70);
		CamWriteCmosSensor(0x85, 0x2b);
		CamWriteCmosSensor(0x86, 0x28);
	  }	
      break;
    case CAM_WB_DAYLIGHT:/* disable AWB */
	  {
		CamWriteCmosSensor(0x03, 0x22);
		CamWriteCmosSensor(0x11, 0x28); 	  
		CamWriteCmosSensor(0x80, 0x59);
		CamWriteCmosSensor(0x82, 0x29);
		CamWriteCmosSensor(0x83, 0x60);
		CamWriteCmosSensor(0x84, 0x50);
		CamWriteCmosSensor(0x85, 0x2f);
		CamWriteCmosSensor(0x86, 0x23);
	  }	   
      break;
    case CAM_WB_INCANDESCENCE:/* disable AWB */
      {
		CamWriteCmosSensor(0x03, 0x22);
		CamWriteCmosSensor(0x11, 0x28);		  
		CamWriteCmosSensor(0x80, 0x29);
		CamWriteCmosSensor(0x82, 0x54);
		CamWriteCmosSensor(0x83, 0x2e);
		CamWriteCmosSensor(0x84, 0x23);
		CamWriteCmosSensor(0x85, 0x58);
		CamWriteCmosSensor(0x86, 0x4f);
	 }
      break;
    case CAM_WB_FLUORESCENT:/* disable AWB */
	 {
		CamWriteCmosSensor(0x03, 0x22);
		CamWriteCmosSensor(0x11, 0x28);
		CamWriteCmosSensor(0x80, 0x41);
		CamWriteCmosSensor(0x82, 0x42);
		CamWriteCmosSensor(0x83, 0x44);
		CamWriteCmosSensor(0x84, 0x34);
		CamWriteCmosSensor(0x85, 0x46);
		CamWriteCmosSensor(0x86, 0x3a);
	 }
      break;
    case CAM_WB_TUNGSTEN:/* disable AWB */
     {
		CamWriteCmosSensor(0x03, 0x22);
		CamWriteCmosSensor(0x80, 0x24);
		CamWriteCmosSensor(0x81, 0x20);
		CamWriteCmosSensor(0x82, 0x58);
		CamWriteCmosSensor(0x83, 0x27);
		CamWriteCmosSensor(0x84, 0x22);
		CamWriteCmosSensor(0x85, 0x58);
		CamWriteCmosSensor(0x86, 0x52);
	 }
      break;
    default:
      break;    
    }


	switch(mode)
	{
		case DCAMERA_ENVIRONMENT_NORMAL:
{0x03, 0x20}, //Page 20
{0x03, 0x20}, //Page 20
{0x83, 0x00}, //EXP Normal 33.33 fps 
{0x84, 0xaf}, 
{0x85, 0x1a}, 
{0x86, 0x00}, //EXPMin 6224.07 fps
{0x87, 0xf1}, 
{0x88, 0x02}, //EXP Max 10.00 fps 
{0x89, 0x47}, 
{0x8a, 0xac}, 
{0x8B, 0x3a}, //EXP100 
{0x8C, 0x5e}, 
{0x8D, 0x30}, //EXP120 
{0x8E, 0x7b}, 
{0x9c, 0x06}, //EXP Limit 889.15 fps 
{0x9d, 0x97}, 
{0x9e, 0x00}, //EXP Unit 
{0x9f, 0xf1}, 
		break;

		case DCAMERA_ENVIRONMENT_NIGHT:
{0x03, 0x20}, //Page 20
{0x83, 0x00}, //EXP Normal 33.33 fps 
{0x84, 0xaf}, 
{0x85, 0x1a}, 
{0x86, 0x00}, //EXPMin 6224.07 fps
{0x87, 0xf1}, 
{0x88, 0x03}, //EXP Max 6.25 fps 
{0x89, 0xa5}, 
{0x8a, 0xe0}, 
{0x8B, 0x3a}, //EXP100 
{0x8C, 0x5e}, 
{0x8D, 0x30}, //EXP120 
{0x8E, 0x7b}, 
{0x9c, 0x06}, //EXP Limit 889.15 fps 
{0x9d, 0x97}, 
{0x9e, 0x00}, //EXP Unit 
{0x9f, 0xf1}, 
		break;

		default :
		break;
	}

#endif
#endif
